mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
print(length(change_year))
new_change_year <- as.data.frame(change_year)
print(new_change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, as.data.frame(new_change_year[2, j]))
}
print(vector_temperatures)
print(change_year)
mu <- mean(data$X1996[1:20])  # Use year_temps directly
std <- sd(data$X1996[1:20])
q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
print(length(change_year))
new_change_year <- as.data.frame(change_year)
print(new_change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
print(vector_temperatures)
print(change_year)
mu <- mean(data$X1996[1:20])  # Use year_temps directly
std <- sd(data$X1996[1:20])
q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
print(length(change_year))
new_change_year <- as.data.frame(change_year)
print(new_change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
print(as.data.frame(vector_temperatures))
print(change_year)
mu <- mean(data$X1996[1:20])  # Use year_temps directly
std <- sd(data$X1996[1:20])
q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
print(length(change_year))
new_change_year <- as.data.frame(change_year)
print(new_change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
print(as.numeric(vector_temperatures))
print(change_year)
mu <- mean(data$X1996[1:20])  # Use year_temps directly
std <- sd(data$X1996[1:20])
q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
new_change_year <- as.data.frame(change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
vector_temperatures <- as.numeric(vector_temperatures)
print(vector_temperatures)
mu <- mean(data$X1996[1:20])  # Use year_temps directly
std <- sd(data$X1996[1:20])
q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
new_change_year <- as.data.frame(change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
vector_temperatures <- as.numeric(vector_temperatures)
print(vector_temperatures)
mu = mean(vector_temperatures[1:5])
std = sd(vector_temperatures[1:5])
warmer <- cusum(vector_temperatures, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#mu <- mean(data$X1996[1:20])  # Use year_temps directly
#std <- sd(data$X1996[1:20])
#q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, cusum$data[i])
found = FALSE
}
}
return(change_dates)
})
new_change_year <- as.data.frame(change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
vector_temperatures <- as.numeric(vector_temperatures)
print(vector_temperatures)
mu = mean(vector_temperatures[1:5])
std = sd(vector_temperatures[1:5])
warmer <- cusum(vector_temperatures, center = mu, std.dev = std, head.start = 0, decision.interval = 1)
#mu <- mean(data$X1996[1:20])  # Use year_temps directly
#std <- sd(data$X1996[1:20])
#q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, mean(cusum$data[1:i]))
found = FALSE
}
}
return(change_dates)
})
new_change_year <- as.data.frame(change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
vector_temperatures <- as.numeric(vector_temperatures)
print(vector_temperatures)
mu = mean(vector_temperatures[1:5])
std = sd(vector_temperatures[1:5])
warmer <- cusum(vector_temperatures, center = mu, std.dev = std, head.start = 0, decision.interval = 1)
#mu <- mean(data$X1996[1:20])  # Use year_temps directly
#std <- sd(data$X1996[1:20])
#q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('qcc')
myData <- read.table("temps.txt", header = TRUE)
data <- data.frame(myData)
vector_temperatures <- vector("list", length = 0)
change_year <- lapply(data[, -1], function(year_temps) {
mu <- mean(year_temps[1:20])  # Use year_temps directly
std <- sd(year_temps[1:20])    # Use year_temps directly
cusum <- cusum(year_temps, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
change_dates <- vector("list", length = 0)
found = TRUE
for (i in 1:length(cusum$neg)){
if (cusum$neg[i] < - 10 && found == TRUE){
change_dates <- data$DAY[i]
change_dates <- append(change_dates, mean(cusum$data[1:i]))
found = FALSE
}
}
return(change_dates)
})
new_change_year <- as.data.frame(change_year)
for (j in 1:length(new_change_year)){
vector_temperatures <- append(vector_temperatures, new_change_year[2, j])
}
vector_temperatures <- as.numeric(vector_temperatures)
print(vector_temperatures)
mu = mean(vector_temperatures[1:5])
std = sd(vector_temperatures[1:5])
warmer <- cusum(vector_temperatures, center = mu, std.dev = std, head.start = 0, decision.interval = 2)
#mu <- mean(data$X1996[1:20])  # Use year_temps directly
#std <- sd(data$X1996[1:20])
#q <- cusum(data$X1996, center = mu, std.dev = std, head.start = 0, decision.interval = 10)
#print(q$neg)
getwd()
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(-data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
highest_value <- max(data$Crime)
highest_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = FALSE, two.sided = TRUE)
outlier_result
sorted_df <- data[order(-data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
highest_value <- max(data$Crime)
highest_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 20, opposite = FALSE, two.sided = FALSE)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 20, opposite = FALSE, two.sided = TRUE)
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(-data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
highest_value <- max(data$Crime)
highest_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
highest_value <- max(data$Crime)
highest_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
highest_value <- max(data$Crime)
highest_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
ggplot(data = data$Crime, aes(x = "Category", y = values)) +
geom_boxplot(coeff = 0.1) +
labs(title = "Box and Whisker Plot", x = "Category", y = "Values")
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
ggplot(data = as.data.frame(data$Crime), aes(x = "Category", y = values)) +
geom_boxplot(coeff = 0.1) +
labs(title = "Box and Whisker Plot", x = "Category", y = "Values")
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
ggplot(data$Crime, aes(x = Group, y = Values)) +
geom_boxplot(coef = 01,     # Set coef to 0 to suppress whiskers
outlier.shape = NA) +  # Suppress outlier points for clarity
geom_jitter(width = 0.2, alpha = 0.5) +  # Add jittered points for data
labs(title = "Custom Whisker Percentiles", x = "Group", y = "Values")
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
custom_whisker_percentiles <- data$Crime %>%
group_by(Group) %>%
summarize(lower_whisker = quantile(Values, 0.10),
upper_whisker = quantile(Values, 0.90))
install.packages('dplyr')
install.packages("dplyr")
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
library('dplyr')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
custom_whisker_percentiles <- data$Crime %>%
group_by(Group) %>%
summarize(lower_whisker = quantile(Values, 0.10),
upper_whisker = quantile(Values, 0.90))
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
library('dplyr')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
library('dplyr')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
library('dplyr')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = TRUE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
getwd()
setwd("C:/Users/omkar/OneDrive/Documents/Analytical Tools Folder")
library('outliers')
library('ggplot2')
library('dplyr')
myData <- read.table("uscrime.txt", header = TRUE)
data <- data.frame(myData)
outlier_result <- grubbs.test(x = data$Crime, type = 10, opposite = FALSE, two.sided = FALSE)
outlier_result
sorted_df <- data[order(data$Crime), ]
head(sorted_df)
mean_value <- mean(data$Crime)
mean_value
std_value <- sd(data$Crime)
std_value
